<PageHeader>
    <PageHeaderTitle>@(((ApplicationState)CurrentState).GetDescription())</PageHeaderTitle>
    <PageHeaderExtra>
        @if (CurrentState is ApplicationState.AlgorithmWorking)
        {
            <Button @onclick="@OnPause">
                Stop!
            </Button>
        }
        @if (CurrentState is ApplicationState.AlgorithmStopped)
        {
            <Button @onclick="@OnResume">Resume!</Button>
        }
    </PageHeaderExtra>
    <PageHeaderContent>
        @if (CurrentState is ApplicationState.SelectingImage)
        {
            <div>
                Upload image to start:
                <InputFile OnChange="OnFileUpload" accept=".png,.jpg,.jpeg" />
            </div>
        }
        @if (CurrentState is ApplicationState.SettingParameters)
        {
            <Descriptions Size="small" Column="3" Title="Image analysis">
                <DescriptionsItem Title="Width" Span="1">@Analysis?.Width</DescriptionsItem>
                <DescriptionsItem Title="Pixel Count" Span="1">@Analysis?.PixelCount</DescriptionsItem>
                <DescriptionsItem Title="Alpha channel" Span="1">@(Analysis.ContainsAlpha ? "True" : "False")</DescriptionsItem>
                <DescriptionsItem Title="Height" Span="1">@Analysis?.Height</DescriptionsItem>
                <DescriptionsItem Title="Distinct colors" Span="1">@Analysis?.ColorCount</DescriptionsItem>
            </Descriptions>
        }
        @if (CurrentState is ApplicationState.AlgorithmWorking or ApplicationState.AlgorithmStopped)
        {
            @if (CurrentState is ApplicationState.AlgorithmWorking)
            {
                <Button @onclick="@OnPause">
                    Stop!
                </Button>
            }
            @if (CurrentState is ApplicationState.AlgorithmStopped)
            {
                <Button @onclick="@OnResume">Resume!</Button>
            }
            <Descriptions Size="small" Column="2">
                <DescriptionsItem Title="Iteration" Span="1">
                    <Progress Percent=@(((double)AlgorithmResultList!.Last().Iteration/AlgorithmParameters!.MaxIterations)*100)
                          ShowInfo="true"
                          Format=@((d) => $"{AlgorithmResultList!.Last().Iteration}/{AlgorithmParameters!.MaxIterations}") />
                </DescriptionsItem>
                <DescriptionsItem Title="Score" Span="1">@Algorithm.GetScorePercentage(AlgorithmResultList?.Last().Score ?? double.MaxValue, Analysis?.Width, Analysis?.Height)%</DescriptionsItem>
            </Descriptions>
        }

        @if (CurrentState is ApplicationState.AlgorithmFinished)
        {
            <Button @onclick="@OnGenerateTimelapse">Generate timelapse video!</Button>    
        }

    </PageHeaderContent>
</PageHeader>

@code {
    [Parameter]
    public AnalysisResult? Analysis { get; set; }

    [Parameter]
    public ApplicationState CurrentState { get; set; }

    [Parameter]
    public List<AlgorithmResult>? AlgorithmResultList { get; set; }

    [Parameter]
    public AlgorithmParameters? AlgorithmParameters { get; set; }

    [Parameter]
    public EventCallback<InputFileChangeEventArgs> OnFileUpload { get; set; }

    [Parameter]
    public Action OnPause { get; set; }

    [Parameter]
    public Action OnResume { get; set; }

    [Parameter]
    public Action OnGenerateTimelapse { get; set; }
}
