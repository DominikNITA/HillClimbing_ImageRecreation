@using Syncfusion.Blazor.Inputs
@using System.Drawing

<h3>ParametersSettings</h3>

<EditForm Model="@parametersModel" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    @*    <div class="form-group">
        <label for="MinShapeSize">Min:</label>
        <SfNumericTextBox ID="MinShapeSize" @bind-Value="parametersModel.MinShapeSize" TValue="int"></SfNumericTextBox>
        </div>
        <div class="form-group">
        <label for="MaxShapeSize">Max:</label>
        <SfNumericTextBox ID="MaxShapeSize" @bind-Value="parametersModel.MaxShapeSize"></SfNumericTextBox>
        </div>*@
    <Row>
        <Col Size="6">
        <label class="form-label">Shape size limits:</label>
        <SfSlider @bind-Value="parametersModel.ShapeSizeLimits"
                  Type="SliderType.Range"
                  Min="0"
                  Max="GetMaxShapeLimit()">
            <SliderTicks Placement="Placement.After" ShowSmallTicks="true" LargeStep="GetMaxShapeLimit()/10 - GetMaxShapeLimit()%10" SmallStep="1"></SliderTicks>
            <SliderTooltip IsVisible="true" ShowOn="TooltipShowOn.Always" Placement="TooltipPlacement.Before"></SliderTooltip>
            <SliderLimits MinStart="1" Enabled="true"></SliderLimits>
        </SfSlider>
        </Col>
    </Row>
    <Row>
        <Col Size="6">
        <label class="form-label">Background Color:</label>
        <Row>
            <SfColorPicker ModeSwitcher="false" ShowButtons="false" ValueChanged="@OnColorChanged" Value="@parametersModel.BackgroundColorString"></SfColorPicker>
        </Row>
        </Col>
    </Row>
    <Row>
        <Col Size="2">
        <SfCheckBox @bind-Checked="@parametersModel.AllowRotation">Allow rotation</SfCheckBox>
        </Col>
        <Col Size="2">
        <SfCheckBox @bind-Checked="@parametersModel.AllowAlpha">Allow Alpha</SfCheckBox>
        </Col>
    </Row>
    <SfButton type="submit">Submit</SfButton>
</EditForm>

@code {
    private AlgorithmParameters parametersModel = new();

    [Parameter]
    public EventCallback<AlgorithmParameters> OnAlgorithmParametersSet { get; set; }

    [Parameter]
    public AnalysisResult? Analysis { get; set; }

    protected override void OnParametersSet()
    {
        parametersModel.ShapeSizeLimits = new int?[] { 1, GetMaxShapeLimit() };
        parametersModel.BackgroundColorString = "#e1d9d9ff";
    }

    private int GetMaxShapeLimit()
    {
        return Math.Max(Analysis?.Width ?? 1, Analysis?.Height ?? 1);
    }

    private async void HandleValidSubmit()
    {
        System.Console.WriteLine(parametersModel.PropertiesToString());
        await OnAlgorithmParametersSet.InvokeAsync(parametersModel);
    }

    public void OnColorChanged(string value)
    {
        parametersModel.BackgroundColorString = value;
    }
}
