@page "/tests"

@inject ShapeTypesProvider ShapeTypesProvider

<h3>ShapeTester</h3>

<img src="data:image/gif;base64,@_testImage">

<Form Model="@_shapeParameters">
    <Divider Orientation="left" Style="font-weight:bold">Shape</Divider>
    <ShapeDropdown OnChangeCallback="@((x) => {_shapeParameters.Type = x; UpdateShapeImage();})"></ShapeDropdown>

    <Divider Orientation="left" Style="font-weight:bold">Rotation</Divider>
    <AntDesign.Slider TValue="double"
                      Min="0"
                      Max="360"
                      Step="1"
    @bind-Value=@_shapeParameters.Rotation
                      OnChange="UpdateShapeImage"
                      Style="width:120px"></AntDesign.Slider>

</Form>

@code {
    string _testImage;
    ShapeParameters _shapeParameters = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    void UpdateShapeImage(double newValue = 0)
    {
        Console.WriteLine("Test");
        if (_shapeParameters.Type == null)
        {
            return;
        }

        var shapeTester = new Logic.Tests.ShapeTester();
        _testImage = shapeTester.CreateBase64Image(
            _shapeParameters.Type,
            new System.Drawing.Size() { Width = 40, Height = 22 },
            new System.Drawing.Point() { X = 30, Y = 55 },
            _shapeParameters.Rotation,
            false
            );
        StateHasChanged();
    }

    class ShapeParameters
    {
        public Type Type { get; set; }

        public double Rotation { get; set; }
    }
}
