@page "/"
@inject IWebHostEnvironment Environment

<PageTitle>Hill Climbing Algorithm</PageTitle>

<h1>Hill Climbing Algorithm</h1>
<h2>Image Recreation</h2>

@*Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />*@
Upload image to start:
<InputFile OnChange="@LoadFiles" multiple />

@if (file != null)
{
    <h3>Uploaded image:</h3>
    @*<img src="@path"/>*@
    <img src="data:image/gif;base64,@Convert.ToBase64String(File.ReadAllBytes(path))">
    <div>Image name: @file.Name</div>
    <button @onclick="@Analyze">Analyze</button>
    @if(analysisResult != null)
    {
        <AnalysisResultPreview Analysis="@analysisResult"></AnalysisResultPreview>
    }
}

@code {
    IBrowserFile? file = null;
    string path = "";
    AnalysisResult? analysisResult;

    private async void LoadFiles(InputFileChangeEventArgs e)
    {
        analysisResult = null;
        var trustedFileNameForFileStorage = Path.GetRandomFileName();
        trustedFileNameForFileStorage = trustedFileNameForFileStorage.Substring(0, trustedFileNameForFileStorage.LastIndexOf('.')) + e.File.Name.Substring(e.File.Name.LastIndexOf('.'));

        path = Path.Combine(Environment.ContentRootPath,
                        Environment.EnvironmentName, "unsafe_uploads",
                        trustedFileNameForFileStorage);

        await using FileStream fs = new(path, FileMode.Create);
        await e.File.OpenReadStream().CopyToAsync(fs);
        file = e.File;
        StateHasChanged();
    }

    void Analyze()
    {
        analysisResult = Analyzer.AnalyzeImage(path);
    }
}
